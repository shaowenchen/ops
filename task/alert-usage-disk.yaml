apiVersion: crd.chenshaowen.com/v1
kind: Task
metadata:
    name: alert-usage-disk
    namespace: ops-system
spec:
    desc: use task `alert-usage-disk` to check npu cm in specified host
    crontab: "*/10 * * * *"
    nodeName: "anymaster"
    typeRef: cluster
    variables:
        cluster: "default"
        usage: "80"
        notifaction: "https://xz.wps.cn/api/v1/webhook/send?key="
    steps:
        - name: alert-usage-disk
          content: |
              #!/usr/bin/python
              import os
              import subprocess
              import requests
              import json
              from datetime import datetime

              cluster = '${cluster}'
              notifaction = '${notifaction}'

              error_message = ''
              reason = '磁盘使用率超过阈值'
              usage_threshold = ${usage}
              

              def send(message):
                  payload = {
                      'msgtype': 'text',
                      'text': {
                          'content': message
                      }
                  }
                  headers = {
                      'Content-Type': 'application/json'
                  }
                  response = requests.request('POST', notifaction, headers=headers, data=json.dumps(payload))
                  print(response.text)
              def get_hosts(namespace="ops-system"):
                  cmd = ["kubectl", "-n", namespace, "get", "hosts", "-o", "json"]
                  try:
                      result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True, check=True)
                      return json.loads(result.stdout)
                  except subprocess.CalledProcessError as e:
                      print(f"Error fetching hosts: {e.stderr}")
                      return None
              def check_disk_usage(hosts):
                  global error_message
                  for item in hosts.get("items", []):
                      hostname = item.get("metadata", {}).get("hostname")
                      status = item.get("status", {})
                      disk_usage_percent = status.get("diskUsagePercent")
                      if disk_usage_percent:
                          usage_percentages = [int(disk.strip('%')) for disk in disk_usage_percent.split() if "%" in disk]
                          if any(usage > usage_threshold for usage in usage_percentages):
                              error_message += f"Hostname: {hostname}, Usage: {disk_usage_percent}\n"
              try:
                  hosts = get_hosts()
                  if hosts:
                      check_disk_usage(hosts)
              except Exception as e:
                  if len(error_message) == 0:
                      error_message = str(e)
              finally:
                  if len(error_message) > 0:
                      print(error_message)
                      error_message = f'集群: {cluster} \n{error_message}异常判断: {reason}\n'
                      send(error_message)
