apiVersion: crd.chenshaowen.com/v1
kind: Task
metadata:
  name: clear-kubernetes
  namespace: ops-system
spec:
  desc: clear exception pods in specified namespace within a Kubernetes cluster.
  host: anymaster
  variables:
    namespace:
      display: namespace
      required: true
  steps:
    - name: clear Evicted pod
      content: kubectl get pods -n ${namespace} -o wide | grep Evicted | awk '{print $1}' | xargs -r -L1 kubectl delete pod -n ${namespace} --grace-period=0 --force
      allowfailure: "true"
    - name: clear Error pod
      content: kubectl get pods -n ${namespace} -o wide | grep Error | awk '{print $1}' | xargs -r -L1 kubectl delete pod -n ${namespace} --grace-period=0 --force
      allowfailure: "true"
    - name: clear Completed pod
      content: kubectl get pods -n ${namespace} -o wide | grep Completed | awk '{print $1}' | xargs -r -L1 kubectl delete pod -n ${namespace} --grace-period=0 --force
      allowfailure: "true"
    - name: clear ErrImagePull pod
      content: kubectl get pods -n ${namespace} -o wide | grep ErrImagePull | awk '{print $1}' | xargs -r -L1 kubectl delete pod -n ${namespace} --grace-period=0 --force
      allowfailure: "true"
    - name: clear ImagePullBackOff pod
      content: kubectl get pods -n ${namespace} -o wide | grep ImagePullBackOff | awk '{print $1}' | xargs -r -L1 kubectl delete pod -n ${namespace} --grace-period=0 --force
      allowfailure: "true"
    - name: clear CrashLoopBackOff pod
      content: kubectl get pods -n ${namespace} -o wide | grep CrashLoopBackOff | awk '{print $1}' | xargs -r -L1 kubectl delete pod -n ${namespace} --grace-period=0 --force
      allowfailure: "true"
    - name: clear Terminating pod
      content: kubectl get pods -n ${namespace} -o wide | grep Terminating | awk '{print $1}' | xargs -r -L1 kubectl delete pod -n ${namespace} --grace-period=0 --force
      allowfailure: "true"
