apiVersion: crd.chenshaowen.com/v1
kind: Task
metadata:
  name: check-gpu-drop
  namespace: ops-system
spec:
  desc: check the gpu card dropped in specified host
  variables:
    desired_gpu_count: 
      default: "8"
  steps:
    - name: Check nvidia-smi
      content: nvidia-smi
      allowfailure: "true"
    - name: GPU Model
      content: nvidia-smi --query-gpu=gpu_name --format=csv,noheader
      allowfailure: "true"
    - name: Check lspci GPU Count
      allowfailure: "true"
      content: |
        GPU_LSPCI_COUNT=$(lspci -d 10de: | grep -v 1af1 | grep -v Audio | grep -v USB | wc -l); if [ $GPU_LSPCI_COUNT -eq ${desired_gpu_count} ]; then echo "OK - lspci GPU count matches ${desired_gpu_count}"; else echo "ERROR - lspci GPU count mismatch: $GPU_LSPCI_COUNT vs ${desired_gpu_count}"; fi
    - name: Check nvidia-smi GPU Count
      allowfailure: "true"
      content: |
        GPU_SMI_COUNT=$(nvidia-smi -L | grep NVIDIA| wc -l); if [ $GPU_SMI_COUNT -eq ${desired_gpu_count} ]; then echo "OK - nvidia-smi GPU count matches ${desired_gpu_count}"; else echo "ERROR - nvidia-smi GPU count mismatch: $GPU_SMI_COUNT vs ${desired_gpu_count}"; fi
    - name: Revision FF
      allowfailure: "true"
      content: |
        if lspci -d 10de: | grep -q "rev ff"; then echo "ERROR - 'rev ff' found in lspci output"; else echo "OK - No 'rev ff' found"; fi
    - name: XID == 79
      allowfailure: "true"
      content: |
        if dmesg -T | grep -i "NVRM: Xid" > /dev/null; then echo "ERROR - Xid error found in dmesg"; else echo "OK - No Xid error found"; fi
