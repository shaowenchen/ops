apiVersion: crd.chenshaowen.com/v1
kind: Task
metadata:
  name: alert-gpu-fabric
  namespace: ops-system
spec:
  desc: check fabricmanager in specified host
  host: "alert-gpu=enabled"
  variables:
    threshold:
      default: "3"
  steps:
    - name: alert-fabric
      content: |
        #!/usr/bin/python
        import os
        import subprocess
        import requests
        import json
        from datetime import datetime, timedelta

        threshold = int('${threshold}')
        message = ''

        def send(status, message):
            payload = {
                'host': '${HOSTNAME}',
                'type': 'TaskRunReport',
                'kind': '${TASKRUN}',
                'threshold': str(threshold),
                'operator': '>',
                'status': status,
                'message': message
            }
            headers = {
                'Content-Type': 'application/json'
            }
            response = requests.post('${OPSSERVER_ENDPOINT}/api/v1/namespaces/${NAMESPACE}/events/taskruns.${TASKRUN}.reports.${HOSTNAME}', headers=headers, data=json.dumps(payload))
            print(response.text)

        def is_fabricmanager_installed():
            try:
                result = subprocess.run(['systemctl', 'list-unit-files', '--type=service'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
                if 'nvidia-fabricmanager.service' in result.stdout:
                    return True
                return False
            except Exception as e:
                return False

        def check_fabricmanager_status():
            try:
                result = subprocess.run(['systemctl', 'is-active', 'nvidia-fabricmanager'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
                if result.stdout.strip() != 'active':
                    return False
                return True
            except Exception as e:
                return False

        try:
            if not is_fabricmanager_installed():
                print('fabricmanager服务未安装')
                exit(0)
            if not check_fabricmanager_status():
                message += 'status is not running\n'
                raise Exception(message)

            log_file = '/var/log/fabricmanager.log'
            if not os.path.exists(log_file):
                print('日志文件不存在')
                exit(0)
            
            current_time = datetime.now()
            one_hour_ago = current_time - timedelta(hours=1)
            error_logs = []

            with open(log_file, 'r') as f:
                count = 0
                for line in f:
                    if 'error' in line.lower():
                        timestamp_str = line.split(']')[0].strip('[')
                        log_time = datetime.strptime(timestamp_str, '%b %d %Y %H:%M:%S')
                        if log_time >= one_hour_ago:
                            count += 1
                            if count > threshold:
                                break
                            error_logs.append(line.strip())

            if error_logs:
                message += '错误日志:\n' + '\n'.join(error_logs) + '\n'
                raise Exception(message)

        except Exception as e:
            if len(message) == 0:
                message = str(e)
        finally:
            if len(message) > 0:
                send('alerting', message)
            else:
                send('normal', message)
