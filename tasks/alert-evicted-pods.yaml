apiVersion: crd.chenshaowen.com/v1
kind: Task
metadata:
    name: alert-evicted-pods
    namespace: ops-system
spec:
    desc: alert-evicted-pods
    host: anymaster
    variables:
        threshold:
            default: "10"
    steps:
        - name: alert-evicted-pods
          content: |
              #!/usr/bin/python
              import subprocess
              import requests
              import json

              threshold = int('${threshold}')

              def send(status, message, value):
                  payload = {
                      'host': '${HOSTNAME}',
                      'kind': '${TASKRUN}',
                      'type': 'TaskRunReport',
                      'status': status,
                      'message': message,
                      'threshold': '${threshold}',
                      'operator': '>',
                      'value': str(value)
                  }
                  headers = {
                      'Content-Type': 'application/json'
                  }
                  response = requests.post('${OPSSERVER_ENDPOINT}/api/v1/namespaces/${NAMESPACE}/events/taskruns.${TASKRUN}.reports',
                                          headers=headers, data=json.dumps(payload))
                  print(response.text)

              def get_evicted_pods():
                  try:
                      cmd = "kubectl get pod -A | grep Evicted | wc -l"
                      result = subprocess.check_output(cmd, shell=True).decode('utf-8').strip()
                      return int(result)
                  except Exception as e:
                      print(f"Error: {e}")
                      return 0

              def main():
                  evicted_count = get_evicted_pods()
                  print(f"Evicted pods count: {evicted_count}")

                  if evicted_count >= threshold:
                      message = f"Evicted pods count {evicted_count} exceeds threshold {threshold}."
                      send('alerting', message, evicted_count)
                  else:
                      message = f"Evicted pods count {evicted_count} not exceeds threshold {threshold}."
                      send('normal', message, evicted_count)

              if __name__ == "__main__":
                  main()
